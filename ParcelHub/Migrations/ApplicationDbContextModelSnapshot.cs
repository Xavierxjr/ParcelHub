// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParcelHub.DatabaseConnection;

namespace ParcelHub.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("ParcelHub.Controllers.ConsumerAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Consumeremail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("postCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("streetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Consumeremail");

                    b.ToTable("ConsumerAddress");
                });

            modelBuilder.Entity("ParcelHub.Models.Consumer", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("email");

                    b.ToTable("Consumer");
                });

            modelBuilder.Entity("ParcelHub.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCharge")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("ParcelHub.Models.Parcel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("ActualVolume")
                        .HasColumnType("real");

                    b.Property<float>("ActualWeight")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("EstimateVolume")
                        .HasColumnType("real");

                    b.Property<float>("EstimateWeight")
                        .HasColumnType("real");

                    b.Property<DateTime>("Inbound")
                        .HasColumnType("datetime2");

                    b.Property<float>("ItemValue")
                        .HasColumnType("real");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShippmentId")
                        .HasColumnType("int");

                    b.Property<string>("originTrackingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ShippmentId");

                    b.ToTable("parcel");
                });

            modelBuilder.Entity("ParcelHub.Models.ServiceProviderUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suburb")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("serviceProviderUser");
                });

            modelBuilder.Entity("ParcelHub.Models.ShippingContainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ContainerNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ETA")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ETD")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vessel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("shippingContainer");
                });

            modelBuilder.Entity("ParcelHub.Models.Shippment", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RequiredInsurance")
                        .HasColumnType("bit");

                    b.Property<string>("SPTackingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.ToTable("Shippment");
                });

            modelBuilder.Entity("ParcelHub.Controllers.ConsumerAddress", b =>
                {
                    b.HasOne("ParcelHub.Models.Consumer", null)
                        .WithMany("ConsumerAddresses")
                        .HasForeignKey("Consumeremail");
                });

            modelBuilder.Entity("ParcelHub.Models.Invoice", b =>
                {
                    b.HasOne("ParcelHub.Models.Shippment", "Shippment")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shippment");
                });

            modelBuilder.Entity("ParcelHub.Models.Parcel", b =>
                {
                    b.HasOne("ParcelHub.Models.Shippment", null)
                        .WithMany("Parcels")
                        .HasForeignKey("ShippmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ParcelHub.Models.Shippment", b =>
                {
                    b.HasOne("ParcelHub.Models.Consumer", "Consumer")
                        .WithMany()
                        .HasForeignKey("Email");

                    b.HasOne("ParcelHub.Models.ServiceProviderUser", "ServiceProviderUser")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParcelHub.Models.ShippingContainer", "ShippingContainer")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consumer");

                    b.Navigation("ServiceProviderUser");

                    b.Navigation("ShippingContainer");
                });

            modelBuilder.Entity("ParcelHub.Models.Consumer", b =>
                {
                    b.Navigation("ConsumerAddresses");
                });

            modelBuilder.Entity("ParcelHub.Models.Shippment", b =>
                {
                    b.Navigation("Parcels");
                });
#pragma warning restore 612, 618
        }
    }
}
